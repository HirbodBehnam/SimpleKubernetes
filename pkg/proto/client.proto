syntax = "proto3";
package proto;

import "google/protobuf/empty.proto";
import "pkg/proto/shared.proto";

option go_package = "WLF/pkg/proto";

// Clients authorization for accessing master
message ClientAuthorization {
  string username = 1;
  string password = 2;
}

// True or false if authorization is ok
message ClientAuthorizationResult {
  bool ok = 1;
}

// The request which user has
message ClientRequest {
  oneof request {
    ClientNewJobMessage newJob = 1;
    google.protobuf.Empty jobList = 2;
    GetJobLogsRequest jobLog = 3;
    google.protobuf.Empty nodeList = 4;
    google.protobuf.Empty nodeTop = 5;
  }
}

// Status of a slave to send to client with node list
message SlaveStatus {
  uint32 id = 1;
  string address = 2;
  bool dead = 3;
}

// An array of SlaveStatus
message SlavesStatus {
  repeated SlaveStatus status = 1;
}

// Result of top command on slaves
message SlavesTop {
  // Both slave_ids and slave_tops must have the same size.
  // Same index in slave_id must be for same index in slave_top.
  repeated uint32 slave_ids = 1;
  repeated SlaveTop slave_tops = 2;
}

// JobData is the struct which we sent into JobsList
message JobData {
  UUID id = 1;
  // The command of this job
  string cmd = 2;
  // Which node ran or is running this job.
  // If the job hasn't been started, this is zero.
  uint32 node_id = 3;
  oneof status {
    // Job is waiting for a slave to become free
    google.protobuf.Empty pending = 4;
    // Job is running inside node
    google.protobuf.Empty running = 5;
    // Job has been exited with given exit code
    sint32 exit_code = 6;
    // We couldn't run the job for following reason
    string run_error = 7;
  }
}

// List of all jobs which master has
message JobList {
  repeated JobData jobs = 1;
}

// A job to send to a slave
message ClientNewJobMessage {
  // If set, the job contains a payload
  optional string payload_name = 1;
}

// ClientJobSentResult is the result of a new job request.
// It can either fail or succeed.
message ClientJobSentResult {
  oneof result {
    UUID job_id = 1;
    string error = 2;
  }
}